#Flujo sistémico de web app gestión de tareas:

##Definiciones contextuales:
###Producto de Construcción: Entendemos por producto de construcción por ejemplo, como cualquier cosa que se debe construir, casa, jardín, piso de una casa, muro de una casa, mantención física de un colegio, mantención física de una oficina, Implementación de Software, Construcción de red eléctrica en una casa o edificio.
###Servicio: Se entiende por ejemplo, como aseo de colegio, aseo de oficinas, soporte computacional, diseño de red eléctrica.Dentro de los servicios, existen servicios con  tareas recurrentes, es decir que la misma tarea se ejecuta mas de una vez durante el periodo del proyecto. Por ejemplo el servicio de aseo de un colegio tiene todas las semanas del periodo escolar (Marzo-Diciembre) limpieza de sala 1, sala 2, ..., sala N. A esta limpieza de la misma sala N en una fecha diferente dentro del periodo de un mismo proyecto, le llamamos tarea recurrente por que es la misma tarea, que tiene una repetición de su ejecución en varias fechas y que cada una de las fechas son una unidad mínima de servicio para un proyecto de aseo.

##Axiomas:
###Logica y flujo de creación de personas usuarios
- Primero se crea una persona

- Segundo se crea con esa persona:
-- un usuario
--- el usuario puede ser de la empresa propietaria del sistema, la que es una empresa de servicios/construcción. O puede ser un usuario de la empresa cliente. Estos usuarios nunca tienen cliente_id, por que son administrados por la empresa de servicio/construccion (servicio/producto).
--- el usuario de la empresa propietaria del web app, puede ser:
---- Adminisrador: admin
---- Planificador: planner
---- Supervisor: supervisor
---- Ejecutor (de tareas): executor

- Tercero
-- Se crea el cliente.

- Cuarto
-- Se crean los cliente contrapartes

- Quinto con personas creadas que no sean las mismas asociadas a la propietaria del web app.
--- el usuario del cliente, puede ser:
---- Cliente (persona que no este en cliente_contrapartes, pero que tiene el mismo Rut que la empresa): client
---- Contraparte (asociado a una persona que trabaja para el cliente, estará siempre en la tabla cliente_contrapartes):counterparty

###Logica y flujo de tareas.
- Primero se puede crear un catalogo de tareas, donde se define un nombre estándar para una tarea común y posiblemente recurrente en un proyecto y entre proyectos. Por ejemplo: nombre: aseo a sala 1, descripcion: aseo a sala de numero uno del establecimiento, estado_tipo_id: 2, fecha_creado:2025-01-01, fecha modificación: null. Esta tarea puede ser usada en el Proyecto 1 del cliente A, Proyecto 2 del cliente A, Proyecto 3 del Cliente B, y así sucesivamente. Las tareas se deben poder crear directamente en el mantenedor de tareas, así como en el mantenedor de proyecto_tareas. La tarea puede crearse y no activarse de inmediato.
- Segundo se crea un proyecto, el cual debe pertenecer a un cliente. Por lo que el cliente debe haberse creado primero. Y los contraparte se pueden configurar al momento de crear el proyecto o después antes de activar el proyecto.
- Tercero todo proyecto tiene tareas, por lo que una vez creado el proyecto se pueden crear tareas indicando inmediatamente a que proyecto pertenecerá la tarea. El sistema debe ofrecer un auto completar que busque en el catalogo de taras (tabla tareas), luego si no existe la tarea que esta definiendo el usuario (nombre en tabla tareas), el sistema permitirá se defina el nombre y descripción de la tarea y antes de generar la tarea en el proyecto creara la tarea nueva en el catalogo de tareas, obtendrá su id (en tabla tareas) y recién con el id de la tarea grabara el registro en proyecto_tareas.
- Cuarto la tarea puede asociarse al proyecto y no activarse de inmediato.
- Las tareas para ser ejecutadas y/o registrarle eventos debe estar su estado_tipo_id en los siguientes valores o estados: 2: activo, 5: iniciado, 6: terminado, 7: rechazado, 8: aprobado (en este caso solo el usuario admin y planner puede hacerle cambios)

Estados en estado_tipos
# id, nombre, descripcion
'1', 'creado', 'Registro en proceso de definición, aún no operativo'
'2', 'activo', 'Registro completo y en operación'
'3', 'inactivo', 'Registro completo pero suspendido temporalmente'
'4', 'eliminado', 'Registro dado de baja lógicamente'
'5', 'iniciado', 'Proyecto o tarea ha comenzado ejecución'
'6', 'terminado', 'Proyecto o tarea finalizada, en espera de aprobación'
'7', 'rechazado', 'Tarea rechazada por supervisor'
'8', 'aprobado', 'Proyecto o tarea validada y aceptada'

Estados posibles en tabla tareas
1, 2, 3, 4
Estados posibles en tabla proyecto_tareas:
1, 2, 3, 4, 5, 6, 7, 8

Tipos de tareas en tabla tarea_tipos
# id, nombre
'1', 'intelectual'
'2', 'physical'

Al proyecto no se le lleva traza de producto o servicio o construccion: Por que no facturaremos con este sistema web.
Las tareas recurrentes se determinan solo por que ocurren mas de una vez en el mismo periodo de un proyecto, con una frecuencia determinada. diariamente, semanalmente, quincenalmente, etc. Requiero que el sistema permita al usuario indicar cuando una tarea se repetira diariamente, indicando el dia de la semana que ocurrira (semanal, quincenal, mensual, trimestral, semestral, anual), Cada X meses, Cada X dias: Con esto el sistema debera generar N fechas donde se realizara dicha tarea en proyecto_tareas.

#Feriados en web app
1. Los feriados son días que no se podrá trabajar, comúnmente se consideran feriados los domingos y en muchos proyectos los sábados también. Pero en este caso no siembre es así.
2. La entidad que almacena los feriados para un proyecto, debe considerar todas las fechas que no se trabaja en el proyecto (los motivos no son relevantes).
3. Dado el punto anterior, se necesita un mantener para proyecto_feriados que:
- Permita al usuario crear masivamente como feriados, en el periodo del proyecto seleccionado para crearle feriados, seleccionando cualquiera de los 7 días de la semana, ya que hay empresas que por ejemplo, no trabajan los lunes, o por ejemplo por facilidad de administración e puede querer marcar hasta 6 días de la semana como feriados, para que las otras funcionalidades de creación de tareas sepan que solo 1 día a la semana se puede trabajar en el proyecto.
- Teniendo seleccionados los días de la semana que se quieren registrar como feriados durante el periodo del proyecto, el sistema web debe generar en todas las fechas de esos días un registro con la fecha correspondiente como feriado.
- Además el usuario debe poder indicar una fecha especifica como feriado, y/o un intervalo de fechas especifico como feriado
- Todos los feriados de un proyecto deben presentarse en una tabla navegable en el mantenedor de proyecto_feriados a medida que se agregan, y al momento de consultar los feriados de un proyecto. Por ejemplo si voy a agregar un feriado a un proyecto, al darle agrear se validara que para ese proyecto no este ya creado el feriado, y a terminar de agregar el feriado (si es no existía para ese proyecto) se consultaran todos los feriados del proyecto involucrado y se presentaran en la tabla navegable con todos sus datos.
- El mantenedor de feriados debe ser alcanzable desde el mantenedor de proyecto, para que al invocarlo el usuario ya tenga el id del proyecto en el mantenedor de feriados.

tabla proyecto_feriados
# id=correlativo auto incrementable, proyecto_id=id en tabla proyectos, fecha=fecha que se indica es feriado, estado_tipo_id = estados posibles: de estado_tipos (1:creado, 2:activo, 3:inactivo, 4:eliminado)

C. Casos Edge a Considerar (casos de borde a considerar)
Proyectos con períodos muy largos: ¿Cómo manejar proyectos de varios años? La simplicidad ante todo, los proyectos de este tipo no son a mas de 3 años y tres años de feriados son en promedio 112 por año, en tres años son 336 registros en promedio por proyecto, lo cual es poco.
Cambios en calendarios: ¿Qué pasa si cambia el calendario laboral a mitad de proyecto? El sistema si agrega un feriado y en esa fecha hay tareas, automáticamente debe alertar que moverá todas las fechas de las tareas hacia adelante (agregar la funcionalidad de mover masivamente las fechas de las tareas N días hacia adelante) a menos que el usuario no quiera mover de fecha las tareas y solo para efectos legales quiera marcar el día como feriado (para algún reporte por ejemplo).
Feriados superpuestos: ¿Y si un feriado específico cae en un día ya marcado como feriado recurrente? Si es así y o si es al revés, el feriado se sobre escribe, se registra una modificación al feriado, de todos sus datos excepto el Id y la fecha (por que no permitimos duplicar fecha de feriados en un proyecto).

Preguntas para Validar:
1.¿Los feriados deben tener diferentes prioridades o todos son iguales? Existen renunciables y e irrenunciables, pero en ambos casos solo se le indicara al querer poner tareas en un feriado que esta agendando tareas en un dia feriado o feriado irrenunciable, para que sepa que tiene un costo adicional la HH y posible multa
2.¿Se requiere un calendario visual además de la tabla? No pero la tabla debe calcular y desplegar que dia de la semana es la fecha.
3.¿Los feriados inactivos siguen afectando la planificación? No, ningun feriado afecta la planificacion a menos que el usuario confirme que quiere mover tareas que estaban ese dia feriado programadas (se mueven al siguien dia hábil).
4.¿Se necesita importar feriados desde fuentes externas (calendarios oficiales)? No por que los recurrentes los debiera calcular el sistema, pidiendo una referencia de que dia es hoy para poder calcular cuando es sabado, domingo, etc. Y el resto son solo 8 fechas (en promedio) feriados no sabados ni domingos mas las vacaciones de las personas.

#Como debiera funcionar a nivel de negocio el mantenedor de usuarios:
1. Se debe poder buscar una persona, entre personas que no tienen un usuario asociado.
2. No se ingresa en el mantenedor de usuarios datos de la persona
3. El mantenedor de usuario no crea personas nuevas
4. Se debe poder seleccionar un cliente asociado al usuario, o desasociarlo del cliente.
5. Cuando el usuario es asociado a un cliente, este solo puede ser en usuario_tipo_id = 6 = counterparty.

#Definición del comportamiento para el mantenedor de Permisos usuario
##Estructuras de base de datos con semántica:
-- Referencia tipos de usuario
SELECT
id, -- codigo usario tipo entero auto incremental
nombre, -- nombre del tipo de usuario_notificaciones
descripcion -- explicacion a nivel de negocio
FROM comerci3_bdsetap.usuario_tipos;
-- Nivel Acceso
SELECT 
menu_id, -- id en tabla de menu
usuario_tipo_id, -- id en tabla de usuario_tipos
fecha_creacion, -- fecha creacion registro en tabla
fecha_modificacion, -- fecha modificacion del registro en tabla
estado_tipo_id -- id en tabla de estado_tipos
FROM comerci3_bdsetap.usuario_tipo_menus;
-- Nivel permisos
SELECT 
permiso_id, -- Id tabla permiso_tipos
usuario_tipo_id, -- Di tabla usuario_tipo_id
fecha_creacion, -- Fecha en que se graba el registro
fecha_modificacion, -- Fecha en que se modifica el registro
estado_tipo_id -- codigo que refleja un estado_tipo_id
FROM comerci3_bdsetap.usuario_tipo_permisos;

##Flujo de uso del mantenedor:
1. El usuario desde la gestión de usuarios, tendrá un botón para invocar el mantenedor de permisos.
2. El mantenedor de permisos tendrá:
-- Primero en un card, la definición de los permisos que tiene asociado el usuario a nivel sistemico. Estos permisos son a nivel del rol del usuario
-- Segundo en otro card, la definición de menús que puede acceder el usuario

##Estructura de menús para manage_access
-- El mantenedor de "Menús Accesos" es una opción de menú del grupo 1, debe implementar la mantención de la tabla "usuario_tipo_menus"

Insert Into menu (id, nombre, descripcion, fecha_creacion, fecha_modificacion, estado_tipo_id, url, icono, orden, display, menu_grupo_id)
Select '17', 'manage_access', 'Administra los menus que accede un Usuario Tipo', now(), null, 2, "/accesos", 'menu-button', 17, "Accesos", 1

##Estructura de menús para manage_permissions
-- El mantenedor de "Permisos" es una opción de menú del grupo 2, debe implementar la mantención de la tabla "usuario_tipo_permisos"
Insert Into menu (id, nombre, descripcion, fecha_creacion, fecha_modificacion, estado_tipo_id, url, icono, orden, display, menu_grupo_id)
Select '18', 'manage_permissions', 'Administra los permisos de un Usuario Tipo', now(), null, 2, "/permisos", 'shield-lock', 18, "Permisos", 2

En setap\src\App\users\permissions de linea 219-233 eliminar, por que el usuario puede ver a que tiene permiso pero no administra sus permisos.

